"0","#Return the library IDs that have no hits "
"0",""
"0","no_hit_ids <- setdiff(mtx_to_pull, unique(MTX_signif_hmm_expr_taxa_filt_AM$LIBID))"
"0",""
"0","#add representative entries for library IDs that have no hits."
"0",""
"0","no_hit_df <- data.frame(LIBID=no_hit_ids, description_of_target=""lacticin 481 family lantibiotic"", unpaired_read_count=0)"
"0",""
"0","#summarize the dataframe, then convert it to a ""longer form"""
"0",""
"0","hmm_AM_df <- rbind(MTX_signif_hmm_expr_taxa_filt_AM %>% dplyr::select(LIBID, description_of_target, unpaired_read_count), no_hit_df)"
"0",""
"0","hmm_AM_df_summary <- hmm_AM_df %>% group_by(LIBID,description_of_target) %>% summarise(unpaired_read_count_sum=sum(unpaired_read_count))"
"0",""
"0",""
"0","#https://academic.oup.com/jac/article/71/9/2484/2238319"
"0","#Among the noise in the raw reads, the possibility of contamination has to be taken into consideration, such as sequence carryover.6 SRST2 deals with this by setting an extra threshold of a minimum depth of 5, dealing with the worst part of contamination."
"0","hmm_AM_df_summary$presence <- ifelse(hmm_AM_df_summary$unpaired_read_count_sum >= 5, 1, 0)"
"0",""
"0","hmm_AM_df_wide <- pivot_wider(hmm_AM_df_summary, id_cols=description_of_target,"
"0","                              names_from=LIBID, values_from = presence )"
"0","hmm_AM_df_wide[is.na(hmm_AM_df_wide)] <- 0"
"0",""
"0","##"
"0",""
"0","hmm_AM_df_heatmap_input <- melt(hmm_AM_df_wide, value.name=""presence"") %>% dplyr::rename(LIBID=variable)"
"2","Using description_of_target as id variables
"
"0","##Set the factor levels for LIBID in a sensible manner in this order: Sc, Ch, Ac, Vf, Tw"
"0",""
"0","hmm_AM_df_heatmap_input$LIBID <- factor(hmm_AM_df_heatmap_input$LIBID,"
"0","                                        levels=c(mtx_Sc_ids,"
"0","                                                 mtx_Ch_ids,"
"0","                                                 mtx_Ac_ids,"
"0","                                                 mtx_Vf_ids,"
"0","                                                 mtx_Tw_ids))"
"0",""
"0","##Set the factor levels for the category of AMPs"
"0",""
"0","hmm_AM_df_heatmap_input$description_of_target <- factor(hmm_AM_df_heatmap_input$description_of_target,"
"0","                                                        levels=rev(c( ""halocin C8 precursor-like protein"","
"0","                                                                  ""bacteriocin halocin C8-like domain"","
"0","                                                                 ""thiazolylpeptide-type bacteriocin precursor"","
"0","                                                                 ""thiazolylpeptide-type bacteriocin"","
"0","                                                                 ""lactococcin 972 family bacteriocin"","
"0","                                                                 ""lacticin 481 family lantibiotic"","
"0","                                                                 ""gallidermin/nisin family lantibiotic"","
"0","                                                                 ""plantaricin C family lantibiotic"","
"0","                                                                 ""class IIb bacteriocin, lactobin A/cerein 7B family"","
"0","                                                                 ""salivaricin M family lantibiotic"","
"0","                                                                 ""lichenicidin A2 family type 2 lantibiotic"","
"0","                                                                 ""alpha-1/alpha-2 family phenol-soluble modulin"","
"0","                                                                 ""PSM-delta family phenol-soluble modulin"","
"0","                                                                 ""Delta lysin family"","
"0","                                                                 ""epsilon family phenol-soluble modulin"","
"0","                                                                 ""pyruvate oxidase"","
"0","                                                                 ""L-lactate oxidase"","
"0","                                                                 ""cyclic lactone autoinducer peptide"")))"
"0",""
"0","hmm_AM_df_heatmap_input$presence <- factor(hmm_AM_df_heatmap_input$presence)"
"0",""
"0",""
"0","hmm_AM_heatmap <- ggplot(data=hmm_AM_df_heatmap_input, aes(x=LIBID, y = description_of_target, fill=presence)) + geom_tile(colour =""white"") + "
"0","  scale_fill_manual(values=c(""white"",""steelblue"")) + "
"0","  scale_x_discrete(expand = c(0, 0)) + "
"0","  scale_y_discrete(expand = c(0, 0)) + "
"0","  theme(axis.ticks = element_blank()) +"
"0","  theme(axis.text.x = element_text(angle = 90, vjust = 0.2, hjust=1)) +"
"0","  theme(axis.title = element_blank()) +"
"0","  theme(legend.position=""none"")"
"0",""
"0",""
"0",""
"0","ggsave(plot=hmm_AM_heatmap,"
"0","       filename = ""../plots/fig4A.pdf"","
"0","       height = 5, width =10)"
"0",""
"0",""
"0","hmm_AM_heatmap"
