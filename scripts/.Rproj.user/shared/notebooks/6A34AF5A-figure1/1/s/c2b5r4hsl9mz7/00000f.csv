"0",""
"0","picard_fungal_metrics_filenames <- list.files(path=""../data/picard_RNA_metrics/fungal_mapping/"", pattern=""*_picard_RNA_metrics"")"
"0",""
"0","picard_fungal_histovalues_filenames <-  list.files(path=""../data/picard_RNA_metrics/fungal_mapping/"", pattern=""*_picard_gene_cov_hist"")"
"0",""
"0","#Some metrics are 0, presumably because there are fewer than 1000 highly expressed genes?"
"0","picard_fungal_metrics <- lapply(picard_fungal_metrics_filenames, function(name){"
"0","  "
"0","  metric_df <- read_tsv(paste0(""../data/picard_RNA_metrics/fungal_mapping/"",name), show_col_types = FALSE)"
"0","  "
"0","  metric_df$LIBID <- name %>% gsub(pattern=""_picard_RNA_metrics.tsv"", replacement="""",.)"
"0","  "
"0","  return(metric_df)"
"0","  "
"0","}) %>% do.call(""rbind"",.)"
"0",""
"0",""
"0","#What are the LIBIDs with > 500000 mapped reads to the fungal genome"
"0","picard_fungal_chosen_IDs <- picard_fungal_metrics %>% dplyr::filter(CORRECT_STRAND_READS >= 500000) %>% pull(LIBID)"
"0",""
"0",""
"0","picard_fungal_histogram <- lapply(picard_fungal_histovalues_filenames, function(name){"
"0","  "
"0","  histo_df <- read_tsv(paste0(""../data/picard_RNA_metrics/fungal_mapping/"",name), show_col_types = FALSE)"
"0","  "
"0","  histo_df$LIBID <- name %>% gsub(pattern=""_picard_gene_cov_hist.tsv"", replacement="""",.)"
"0","  "
"0","  return(histo_df)"
"0","  "
"0","}) %>% do.call(""rbind"",.)"
"0",""
"0",""
"0","colnames(picard_fungal_histogram)[2] <- ""normalized_coverage"""
"0",""
"0","picard_fungal_histogram <- merge(picard_fungal_histogram,metadata %>% dplyr::select(LIBID,region),by=""LIBID"",all.x = TRUE)"
"0",""
"0","picard_fungal_histogram$region <- ifelse(is.na(picard_fungal_histogram$region),""Wu_et_al_2015"",picard_fungal_histogram$region)"
"0",""
"0",""
"0","##Spline dfs for gene coverage plotting"
"0","picard_fungal_cov_spline <- lapply(picard_fungal_histovalues_filenames, function(name){"
"0","  "
"0","  histo_df <- read_tsv(paste0(""../data/picard_RNA_metrics/fungal_mapping/"",name), show_col_types = FALSE)"
"0","  "
"0","  histo_df$LIBID <- name %>% gsub(pattern=""_picard_gene_cov_hist.tsv"", replacement="""",.)"
"0","  "
"0","  colnames(histo_df)[2] <- ""normalized_coverage"""
"0","  "
"0","  #spline interpolation of points"
"0","  spline_df <- as.data.frame(spline(histo_df$normalized_position,histo_df$normalized_coverage))"
"0","  "
"0","  spline_df$LIBID <- name %>% gsub(pattern=""_picard_gene_cov_hist.tsv"", replacement="""",.)"
"0","  "
"0","  return(spline_df)"
"0","  "
"0","}) %>% do.call(""rbind"",.)"
"0",""
"0","colnames(picard_fungal_cov_spline)[1] <- ""normalized_position"""
"0","colnames(picard_fungal_cov_spline)[2] <- ""normalized_coverage"""
"0",""
"0",""
"0","picard_fungal_cov_spline <- merge(picard_fungal_cov_spline,metadata %>% dplyr::select(LIBID,region),by=""LIBID"",all.x = TRUE)"
"0",""
"0","picard_fungal_cov_spline$region <- ifelse(is.na(picard_fungal_cov_spline$region),""Wu_et_al_2015"",picard_fungal_cov_spline$region)"
"0",""
"0",""
"0",""
"0",""
